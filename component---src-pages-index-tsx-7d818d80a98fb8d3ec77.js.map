{"version":3,"sources":["webpack://nabrosok-2021/./node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js","webpack://nabrosok-2021/./src/pages/index.tsx","webpack://nabrosok-2021/./src/ui/atoms/typography/typography.tsx","webpack://nabrosok-2021/./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack://nabrosok-2021/./src/ui/atoms/container/container.tsx","webpack://nabrosok-2021/./src/ui/atoms/page-wrapper/page-wrapper.tsx","webpack://nabrosok-2021/./src/ui/atoms/button/button.tsx"],"names":["_objectDestructuringEmpty","obj","TypeError","BackgroundText","styled","Typography","theme","spacing","palette","common","black","white","ContentWrapper","IndexPage","variant","mt","StyledText","styles","css","$numberOfLines","variantMap","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","button","caption","overline","marginMap","mb","ml","mr","mx","my","m","color","numberOfLines","children","props","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","useTheme","textTag","textStyles","typography","textColor","margins","entries","reduce","acc","item","value","pixels","SPACING_SIZE","cssPrefix","marginValue","getMargins","as","Container","PageWrapper","primary","main"],"mappings":"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","file":"component---src-pages-index-tsx-7d818d80a98fb8d3ec77.js","sourcesContent":["export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure undefined\");\n}","import React from 'react';\nimport styled from 'styled-components';\n\nimport { Container, PageWrapper, Typography } from '@ui/atoms';\nimport { IconSpinner } from '@ui/icons/icon-spinner';\n\nconst BackgroundText = styled(Typography)`\n  padding: 0 ${({ theme }) => theme.spacing(1)}px;\n  background-color: ${({ theme }) => theme.palette.common.black};\n  color: ${({ theme }) => theme.palette.common.white};\n  word-break: break-word;\n`;\nconst ContentWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  flex-grow: 1;\n`;\n\ntype Props = {};\n\nexport const IndexPage: React.FC<Props> = ({}) => {\n  return (\n    <PageWrapper>\n      <Container>\n        <ContentWrapper>\n          <BackgroundText variant=\"h2\">\n            Добро пожаловать на фестиваль «Набросок»\n          </BackgroundText>\n          <BackgroundText mt={2}>\n            Вы можете ознакомиться с информацией о работах и художниках, отсканировав\n            QR-коды с выставки\n          </BackgroundText>\n        </ContentWrapper>\n      </Container>\n    </PageWrapper>\n  );\n};\n\nexport default IndexPage;\n","import React from 'react';\nimport styled, { useTheme, css } from 'styled-components';\n\nimport { SPACING_SIZE } from '@ui/theme/helpers';\n\nimport { TTextVariant } from './types';\n\nconst StyledText = styled.p<{ styles?: React.CSSProperties; $numberOfLines?: number }>`\n  ${({ styles }) => styles && css({ ...styles })}\n  ${({ $numberOfLines }) =>\n    $numberOfLines &&\n    `\n    display: -webkit-box;\n    -webkit-line-clamp: ${$numberOfLines};\n    -webkit-box-orient: vertical;  \n    overflow: hidden;\n  `}\n`;\n\nconst variantMap: Record<TTextVariant, string> = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p',\n  button: 'span',\n  caption: 'p',\n  overline: 'span',\n};\n\ntype TTextMargin = {\n  mt?: number;\n  mb?: number;\n  ml?: number;\n  mr?: number;\n  mx?: number;\n  my?: number;\n  m?: number;\n};\n\nconst marginMap: Record<keyof TTextMargin, string> = {\n  mt: 'marginTop',\n  mb: 'marginBottom',\n  ml: 'marginLeft',\n  mr: 'marginRight',\n  mx: 'margin',\n  my: 'margin',\n  m: 'margin',\n};\n\ntype TCSSMargins = Pick<\n  React.CSSProperties,\n  'margin' | 'marginRight' | 'marginLeft' | 'marginBottom' | 'marginTop'\n>;\n\nconst getMargins = (margins: TTextMargin) => {\n  const data = Object.entries(margins).reduce(\n    (acc, item: [string, number | undefined]) => {\n      const [key, value] = item;\n      if (value) {\n        const pixels = `${value * SPACING_SIZE}px`;\n        const cssPrefix = marginMap[key as keyof TTextMargin];\n        let marginValue = '';\n        switch (true) {\n          case key === 'mx': {\n            marginValue = `0 ${pixels}`;\n            break;\n          }\n          case key === 'my': {\n            marginValue = `${pixels} 0`;\n            break;\n          }\n          default: {\n            marginValue = pixels;\n          }\n        }\n        return { ...acc, [cssPrefix]: marginValue };\n      }\n      return acc;\n    },\n    {} as any,\n  );\n  return data as TCSSMargins;\n};\n\ntype Props = {\n  variant?: TTextVariant;\n  color?: string;\n  numberOfLines?: number;\n} & TTextMargin;\n\nexport const Typography: React.FC<Props> = ({\n  variant = 'body2',\n  color,\n  numberOfLines,\n  mt,\n  mb,\n  ml,\n  mr,\n  mx,\n  my,\n  m,\n  children,\n  ...props\n}) => {\n  const theme = useTheme();\n  const textTag = variantMap[variant] as keyof JSX.IntrinsicElements;\n  const textStyles = theme.typography[variant] as React.CSSProperties;\n  const textColor = color ?? textStyles.color;\n\n  const margins = getMargins({ mt, mb, ml, mr, mx, my, m });\n  const styles = { ...textStyles, color: textColor, ...margins };\n\n  return (\n    <StyledText styles={styles} as={textTag} $numberOfLines={numberOfLines} {...props}>\n      {children}\n    </StyledText>\n  );\n};\n","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  min-height: 100%;\n  max-width: 700px;\n  padding: ${({ theme }) => theme.spacing(2)}px 0 ${({ theme }) => theme.spacing(4)}px;\n  display: flex;\n  flex-direction: column;\n  margin: auto;\n`;\n","import styled from 'styled-components';\n\nexport const PageWrapper = styled.div`\n  height: 100vh;\n  background-color: ${({ theme }) => theme.palette.primary.main};\n  overflow-y: auto;\n`;\n","import React from 'react';\nimport styled, { css } from 'styled-components';\n\nconst ButtonWrapper = styled.button`\n  padding: ${({ theme }) => theme.spacing(1)}px ${({ theme }) => theme.spacing(2)}px;\n  background-color: ${({ theme }) => theme.palette.primary};\n  ${({ theme }) => css(theme.typography.button)}\n`;\n\ntype Props = {};\n\nexport const Button: React.FC<Props> = ({ children, ...props }) => {\n  return <ButtonWrapper {...props}>{children}</ButtonWrapper>;\n};\n"],"sourceRoot":""}