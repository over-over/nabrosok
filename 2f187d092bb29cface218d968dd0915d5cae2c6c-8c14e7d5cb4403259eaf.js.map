{"version":3,"sources":["webpack://nabrosok-2021/./src/shared/utils/decl-of-num.ts","webpack://nabrosok-2021/./src/ui/atoms/typography/typography.tsx","webpack://nabrosok-2021/./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack://nabrosok-2021/./src/ui/atoms/container/container.tsx","webpack://nabrosok-2021/./src/ui/atoms/page-wrapper/page-wrapper.tsx","webpack://nabrosok-2021/./src/ui/molecules/artist-card/artist-card.tsx","webpack://nabrosok-2021/./src/ui/atoms/button/button.tsx","webpack://nabrosok-2021/./src/ui/templates/work-template/work-template.tsx","webpack://nabrosok-2021/./src/ui/templates/artist-template/artist-template.tsx"],"names":["declensions","StyledText","styled","styles","css","$numberOfLines","variantMap","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","button","caption","overline","marginMap","mt","mb","ml","mr","mx","my","m","Typography","variant","color","numberOfLines","children","props","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","theme","useTheme","textTag","textStyles","typography","textColor","margins","entries","reduce","acc","item","value","pixels","SPACING_SIZE","cssPrefix","marginValue","getMargins","as","Container","spacing","PageWrapper","palette","primary","main","Wrapper","border","dark","NameText","common","black","white","LinkText","light","ArtistCard","id","name","biography","href","ContentWrapper","background","default","PhotoWrapper","breakpoints","sm","PhotoImage","WorkTemplate","imageUrl","artistData","description","genre","year","src","alt","style","height","declFormatters","age","amount","ArtistTemplate","email","vk","instagram"],"mappings":"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","file":"2f187d092bb29cface218d968dd0915d5cae2c6c-8c14e7d5cb4403259eaf.js","sourcesContent":["export const declOfNum = (declensions: [string, string, string]) => (amount: number) => {\n  const cases = [2, 0, 1, 1, 1, 2];\n  const isManyDeclension = amount % 100 > 4 && amount % 100 < 20;\n  return declensions[isManyDeclension ? 2 : cases[amount % 10 < 5 ? amount % 10 : 5]];\n};\n\nconst age = declOfNum(['год', 'года', 'лет']);\n\nexport const declFormatters = {\n  age,\n};\n","import React from 'react';\nimport styled, { useTheme, css } from 'styled-components';\n\nimport { SPACING_SIZE } from '@ui/theme/helpers';\n\nimport { TTextVariant } from './types';\n\nconst StyledText = styled.p<{ styles?: React.CSSProperties; $numberOfLines?: number }>`\n  ${({ styles }) => styles && css({ ...styles })}\n  ${({ $numberOfLines }) =>\n    $numberOfLines &&\n    `\n    display: -webkit-box;\n    -webkit-line-clamp: ${$numberOfLines};\n    -webkit-box-orient: vertical;  \n    overflow: hidden;\n  `}\n`;\n\nconst variantMap: Record<TTextVariant, string> = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p',\n  button: 'span',\n  caption: 'p',\n  overline: 'span',\n};\n\ntype TTextMargin = {\n  mt?: number;\n  mb?: number;\n  ml?: number;\n  mr?: number;\n  mx?: number;\n  my?: number;\n  m?: number;\n};\n\nconst marginMap: Record<keyof TTextMargin, string> = {\n  mt: 'marginTop',\n  mb: 'marginBottom',\n  ml: 'marginLeft',\n  mr: 'marginRight',\n  mx: 'margin',\n  my: 'margin',\n  m: 'margin',\n};\n\ntype TCSSMargins = Pick<\n  React.CSSProperties,\n  'margin' | 'marginRight' | 'marginLeft' | 'marginBottom' | 'marginTop'\n>;\n\nconst getMargins = (margins: TTextMargin) => {\n  const data = Object.entries(margins).reduce(\n    (acc, item: [string, number | undefined]) => {\n      const [key, value] = item;\n      if (value) {\n        const pixels = `${value * SPACING_SIZE}px`;\n        const cssPrefix = marginMap[key as keyof TTextMargin];\n        let marginValue = '';\n        switch (true) {\n          case key === 'mx': {\n            marginValue = `0 ${pixels}`;\n            break;\n          }\n          case key === 'my': {\n            marginValue = `${pixels} 0`;\n            break;\n          }\n          default: {\n            marginValue = pixels;\n          }\n        }\n        return { ...acc, [cssPrefix]: marginValue };\n      }\n      return acc;\n    },\n    {} as any,\n  );\n  return data as TCSSMargins;\n};\n\ntype Props = {\n  variant?: TTextVariant;\n  color?: string;\n  numberOfLines?: number;\n} & TTextMargin;\n\nexport const Typography: React.FC<Props> = ({\n  variant = 'body2',\n  color,\n  numberOfLines,\n  mt,\n  mb,\n  ml,\n  mr,\n  mx,\n  my,\n  m,\n  children,\n  ...props\n}) => {\n  const theme = useTheme();\n  const textTag = variantMap[variant] as keyof JSX.IntrinsicElements;\n  const textStyles = theme.typography[variant] as React.CSSProperties;\n  const textColor = color ?? textStyles.color;\n\n  const margins = getMargins({ mt, mb, ml, mr, mx, my, m });\n  const styles = { ...textStyles, color: textColor, ...margins };\n\n  return (\n    <StyledText styles={styles} as={textTag} $numberOfLines={numberOfLines} {...props}>\n      {children}\n    </StyledText>\n  );\n};\n","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  min-height: 100%;\n  max-width: 700px;\n  padding: ${({ theme }) => theme.spacing(2)}px 0 ${({ theme }) => theme.spacing(4)}px;\n  display: flex;\n  flex-direction: column;\n  margin: auto;\n`;\n","import styled from 'styled-components';\n\nexport const PageWrapper = styled.div`\n  height: 100vh;\n  background-color: ${({ theme }) => theme.palette.primary.main};\n  overflow-y: auto;\n`;\n","import { Typography } from '@ui/atoms';\nimport React from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  border: 2px solid ${({ theme }) => theme.palette.border.dark};\n  padding: ${({ theme }) => theme.spacing(2)}px;\n`;\nconst NameText = styled(Typography)`\n  padding: 0 ${({ theme }) => theme.spacing(1)}px;\n  background-color: ${({ theme }) => theme.palette.common.black};\n  color: ${({ theme }) => theme.palette.common.white};\n  word-break: break-word;\n`;\nconst LinkText = styled.a`\n  display: inline-block;\n  padding: ${({ theme }) => theme.spacing(1)}px ${({ theme }) => theme.spacing(2)}px;\n  background-color: ${({ theme }) => theme.palette.primary.main};\n  word-break: break-word;\n  text-decoration: none;\n  transition: background-color 0.3s;\n  &:hover {\n    background-color: ${({ theme }) => theme.palette.primary.light};\n  }\n`;\n\ntype Props = {\n  id: number;\n  name: string;\n  biography?: string;\n};\n\nexport const ArtistCard: React.FC<Props> = ({ id, name, biography }) => {\n  return (\n    <Wrapper>\n      <NameText variant=\"h4\" mb={2}>\n        {name}\n      </NameText>\n      {biography && (\n        <Typography mb={2} numberOfLines={3}>\n          {biography}\n        </Typography>\n      )}\n      <LinkText href={`/nabrosok/artists/${id}`}>\n        <Typography variant=\"subtitle1\">Ещё об авторе 👀</Typography>\n      </LinkText>\n    </Wrapper>\n  );\n};\n","import React from 'react';\nimport styled, { css } from 'styled-components';\n\nconst ButtonWrapper = styled.button`\n  padding: ${({ theme }) => theme.spacing(1)}px ${({ theme }) => theme.spacing(2)}px;\n  background-color: ${({ theme }) => theme.palette.primary};\n  ${({ theme }) => css(theme.typography.button)}\n`;\n\ntype Props = {};\n\nexport const Button: React.FC<Props> = ({ children, ...props }) => {\n  return <ButtonWrapper {...props}>{children}</ButtonWrapper>;\n};\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport { Container, PageWrapper, Typography } from '@ui/atoms';\nimport { ArtistCard } from '@ui/molecules';\n\nconst ContentWrapper = styled.div`\n  flex-grow: 1;\n  background-color: ${({ theme }) => theme.palette.background.default};\n  padding: ${({ theme }) => theme.spacing(2)}px;\n`;\nconst PhotoWrapper = styled.div`\n  height: 420px;\n  max-width: 420px;\n  margin: 0 auto ${({ theme }) => theme.spacing(2)}px;\n\n  @media (max-width: ${({ theme }) => theme.breakpoints.sm}px) {\n    height: 320px;\n  }\n`;\nconst PhotoImage = styled.img`\n  height: 100%;\n  width: 100%;\n  object-fit: cover;\n`;\nconst NameText = styled(Typography)`\n  padding: 0 ${({ theme }) => theme.spacing(1)}px;\n  background-color: ${({ theme }) => theme.palette.common.black};\n  color: ${({ theme }) => theme.palette.common.white};\n  word-break: break-word;\n`;\n\ntype Props = {\n  imageUrl: string;\n  name?: string;\n  description?: string;\n  genre?: string;\n  year?: string;\n  artistData?: {\n    id: number;\n    name: string;\n    biography?: string;\n  };\n};\n\nexport const WorkTemplate: React.FC<Props> = ({\n  imageUrl,\n  artistData,\n  name = 'Без названия',\n  description,\n  genre,\n  year,\n}) => {\n  return (\n    <PageWrapper>\n      <Container>\n        <ContentWrapper>\n          {imageUrl && (\n            <PhotoWrapper>\n              <PhotoImage src={imageUrl} alt={name} />\n            </PhotoWrapper>\n          )}\n          <NameText variant=\"h2\" mb={3}>\n            {name}\n          </NameText>\n          {genre && (\n            <Typography variant=\"caption\" mb={2}>\n              Жанр: {genre}\n            </Typography>\n          )}\n          {description && (\n            <Typography variant=\"body2\" mb={1}>\n              {description}\n            </Typography>\n          )}\n          {year && (\n            <Typography variant=\"caption\" mb={2}>\n              {year}г.\n            </Typography>\n          )}\n          {artistData && (\n            <>\n              <div style={{ height: 80 }} />\n              <ArtistCard\n                id={artistData.id}\n                name={artistData.name}\n                biography={artistData.biography}\n              />\n            </>\n          )}\n        </ContentWrapper>\n      </Container>\n    </PageWrapper>\n  );\n};\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport { Container, PageWrapper, Typography } from '@ui/atoms';\nimport { declFormatters } from '@shared/utils';\n\nconst ContentWrapper = styled.div`\n  flex-grow: 1;\n  background-color: ${({ theme }) => theme.palette.background.default};\n  padding: ${({ theme }) => theme.spacing(2)}px;\n`;\nconst PhotoWrapper = styled.div`\n  height: 480px;\n  max-width: 480px;\n  margin: 0 auto ${({ theme }) => theme.spacing(2)}px;\n\n  @media (max-width: ${({ theme }) => theme.breakpoints.sm}px) {\n    height: 320px;\n  }\n`;\nconst PhotoImage = styled.img`\n  height: 100%;\n  width: 100%;\n  object-fit: cover;\n`;\nconst NameText = styled(Typography)`\n  padding: 0 ${({ theme }) => theme.spacing(1)}px;\n  background-color: ${({ theme }) => theme.palette.common.black};\n  color: ${({ theme }) => theme.palette.common.white};\n  word-break: break-word;\n`;\n\ntype Props = {\n  name: string;\n  age?: number;\n  genre?: string;\n  biography?: string;\n  email?: string;\n  vk?: string;\n  instagram?: string;\n};\n\nexport const ArtistTemplate: React.FC<Props> = ({\n  name,\n  age,\n  genre,\n  biography,\n  email,\n  vk,\n  instagram,\n}) => {\n  return (\n    <PageWrapper>\n      <Container>\n        <ContentWrapper>\n          {/* <PhotoWrapper>\n            Тут будет видео-карточка или ничего :)\n            <PhotoImage\n              src=\"https://cdn1.flamp.ru/6d7599452548820411ed077c7d097c42.jpg\"\n              alt={name}\n            />\n          </PhotoWrapper> */}\n          <NameText variant=\"h3\" mb={2}>\n            {name}\n          </NameText>\n          {age && (\n            <Typography variant=\"body2\" mt={2} mb={1}>\n              {age} {declFormatters.age(age)}\n            </Typography>\n          )}\n          <Typography variant=\"caption\" mb={2}>\n            Жанр: {genre}\n          </Typography>\n          {biography && <Typography variant=\"body1\">{biography}</Typography>}\n          <div>\n            {email && <a href={email}>{email}</a>}\n            {instagram && <a href={instagram}>{instagram}</a>}\n            {vk && <a href={vk}>{vk}</a>}\n          </div>\n        </ContentWrapper>\n      </Container>\n    </PageWrapper>\n  );\n};\n"],"sourceRoot":""}