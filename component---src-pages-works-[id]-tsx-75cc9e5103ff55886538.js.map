{"version":3,"sources":["webpack://nabrosok-2021/./src/pages/works/[id].tsx","webpack://nabrosok-2021/./src/shared/utils/decl-of-num.ts","webpack://nabrosok-2021/./src/ui/atoms/typography/typography.tsx","webpack://nabrosok-2021/./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack://nabrosok-2021/./src/ui/atoms/container/container.tsx","webpack://nabrosok-2021/./src/ui/atoms/page-wrapper/page-wrapper.tsx","webpack://nabrosok-2021/./src/ui/templates/work-template/work-template.tsx","webpack://nabrosok-2021/./src/ui/templates/artist-template/artist-template.tsx"],"names":["WorkDetails","location","splitPath","pathname","split","id","Number","length","works","worksJSON","data","artistId","year","imageUrl","description","genre","name","declensions","StyledText","styled","styles","css","variantMap","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","button","caption","overline","marginMap","mt","mb","ml","mr","mx","my","m","Typography","variant","color","children","props","source","excluded","key","i","target","sourceKeys","Object","keys","indexOf","theme","useTheme","textTag","textStyles","typography","textColor","margins","entries","reduce","acc","item","value","pixels","SPACING_SIZE","cssPrefix","marginValue","getMargins","as","Container","PageWrapper","palette","primary","main","ContentWrapper","spacing","background","default","PhotoWrapper","breakpoints","sm","PhotoImage","NameText","common","black","white","WorkTemplate","src","alt","declFormatters","age","amount","ArtistTemplate","biography","email","vk","instagram","href"],"mappings":"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","file":"component---src-pages-works-[id]-tsx-75cc9e5103ff55886538.js","sourcesContent":["import React from 'react';\n\nimport worksJSON from '@data/works.json';\nimport type { TArtistWork } from '@data/types';\nimport { WorkTemplate } from '@ui/templates';\n\ntype Props = {\n  location: any;\n};\n\nexport const WorkDetails: React.FC<Props> = ({ location }) => {\n  const splitPath = location?.pathname?.split('/');\n  const id = Number(splitPath[splitPath.length - 1]);\n  //@ts-ignore\n  const works: Record<string, TArtistWork> = worksJSON;\n  const data = works?.[id];\n\n  if (!id || !data) {\n    return <p>Ooops :(</p>;\n  }\n\n  return (\n    <WorkTemplate\n      artistId={data.artistId}\n      year={data.year}\n      imageUrl={data.imageUrl}\n      description={data.description}\n      genre={data.genre}\n      name={data.name}\n    />\n  );\n};\n\nexport default WorkDetails;\n","export const declOfNum = (declensions: [string, string, string]) => (amount: number) => {\n  const cases = [2, 0, 1, 1, 1, 2];\n  const isManyDeclension = amount % 100 > 4 && amount % 100 < 20;\n  return declensions[isManyDeclension ? 2 : cases[amount % 10 < 5 ? amount % 10 : 5]];\n};\n\nconst age = declOfNum(['год', 'года', 'лет']);\n\nexport const declFormatters = {\n  age,\n};\n","import React from 'react';\nimport styled, { useTheme, css } from 'styled-components';\n\nimport { SPACING_SIZE } from '@ui/theme/helpers';\n\nimport { TTextVariant } from './types';\n\nconst StyledText = styled.p<{ styles?: React.CSSProperties }>`\n  ${({ styles }) => styles && css({ ...styles })}\n`;\n\nconst variantMap: Record<TTextVariant, string> = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p',\n  button: 'span',\n  caption: 'p',\n  overline: 'span',\n};\n\ntype TTextMargin = {\n  mt?: number;\n  mb?: number;\n  ml?: number;\n  mr?: number;\n  mx?: number;\n  my?: number;\n  m?: number;\n};\n\nconst marginMap: Record<keyof TTextMargin, string> = {\n  mt: 'marginTop',\n  mb: 'marginBottom',\n  ml: 'marginLeft',\n  mr: 'marginRight',\n  mx: 'margin',\n  my: 'margin',\n  m: 'margin',\n};\n\ntype TCSSMargins = Pick<\n  React.CSSProperties,\n  'margin' | 'marginRight' | 'marginLeft' | 'marginBottom' | 'marginTop'\n>;\n\nconst getMargins = (margins: TTextMargin) => {\n  const data = Object.entries(margins).reduce(\n    (acc, item: [string, number | undefined]) => {\n      const [key, value] = item;\n      if (value) {\n        const pixels = `${value * SPACING_SIZE}px`;\n        const cssPrefix = marginMap[key as keyof TTextMargin];\n        let marginValue = '';\n        switch (true) {\n          case key === 'mx': {\n            marginValue = `0 ${pixels}`;\n            break;\n          }\n          case key === 'my': {\n            marginValue = `${pixels} 0`;\n            break;\n          }\n          default: {\n            marginValue = pixels;\n          }\n        }\n        return { ...acc, [cssPrefix]: marginValue };\n      }\n      return acc;\n    },\n    {} as any,\n  );\n  return data as TCSSMargins;\n};\n\ntype Props = {\n  variant?: TTextVariant;\n  color?: string;\n} & TTextMargin;\n\nexport const Typography: React.FC<Props> = ({\n  variant = 'body2',\n  color,\n  mt,\n  mb,\n  ml,\n  mr,\n  mx,\n  my,\n  m,\n  children,\n  ...props\n}) => {\n  const theme = useTheme();\n  const textTag = variantMap[variant] as keyof JSX.IntrinsicElements;\n  const textStyles = theme.typography[variant] as React.CSSProperties;\n  const textColor = color ?? textStyles.color;\n\n  const margins = getMargins({ mt, mb, ml, mr, mx, my, m });\n  const styles = { ...textStyles, color: textColor, ...margins };\n\n  return (\n    <StyledText styles={styles} as={textTag} {...props}>\n      {children}\n    </StyledText>\n  );\n};\n","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  height: 100%;\n  max-width: 700px;\n  margin: auto;\n  overflow-y: auto;\n`;\n","import styled from 'styled-components';\n\nexport const PageWrapper = styled.div`\n  height: 100vh;\n  background-color: ${({ theme }) => theme.palette.primary.main};\n`;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport { Container, PageWrapper, Typography } from '@ui/atoms';\n\nconst ContentWrapper = styled.div`\n  min-height: ${({ theme }) => `calc(100% - ${theme.spacing(4)}px);`};\n  background-color: ${({ theme }) => theme.palette.background.default};\n  margin: ${({ theme }) => theme.spacing(2)}px 0;\n  padding: ${({ theme }) => theme.spacing(2)}px;\n`;\nconst PhotoWrapper = styled.div`\n  height: 480px;\n  max-width: 480px;\n  margin: 0 auto ${({ theme }) => theme.spacing(2)}px;\n\n  @media (max-width: ${({ theme }) => theme.breakpoints.sm}px) {\n    height: 320px;\n  }\n`;\nconst PhotoImage = styled.img`\n  height: 100%;\n  width: 100%;\n  object-fit: cover;\n`;\nconst NameText = styled(Typography)`\n  background-color: ${({ theme }) => theme.palette.common.black};\n  color: ${({ theme }) => theme.palette.common.white};\n  word-break: break-word;\n`;\n\ntype Props = {\n  imageUrl: string;\n  artistId: number;\n  name?: string;\n  description?: string;\n  genre?: string;\n  year?: string;\n};\n\nexport const WorkTemplate: React.FC<Props> = ({\n  imageUrl,\n  artistId,\n  name = 'Без названия',\n  description,\n  genre,\n  year,\n}) => {\n  return (\n    <PageWrapper>\n      <Container>\n        <ContentWrapper>\n          {imageUrl && (\n            <PhotoWrapper>\n              <PhotoImage src={imageUrl} alt={name} />\n            </PhotoWrapper>\n          )}\n          <NameText variant=\"h2\" mb={3}>\n            {name}\n          </NameText>\n          {genre && (\n            <Typography variant=\"caption\" mb={2}>\n              Жанр: {genre}\n            </Typography>\n          )}\n          {description && (\n            <Typography variant=\"body2\" mb={1}>\n              {description}\n            </Typography>\n          )}\n          {year && (\n            <Typography variant=\"caption\" mb={2}>\n              {year}г.\n            </Typography>\n          )}\n        </ContentWrapper>\n      </Container>\n    </PageWrapper>\n  );\n};\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport { Container, PageWrapper, Typography } from '@ui/atoms';\nimport { declFormatters } from '@shared/utils';\n\nconst ContentWrapper = styled.div`\n  min-height: ${({ theme }) => `calc(100% - ${theme.spacing(4)}px);`};\n  background-color: ${({ theme }) => theme.palette.background.default};\n  margin: ${({ theme }) => theme.spacing(2)}px 0;\n  padding: ${({ theme }) => theme.spacing(2)}px;\n`;\nconst PhotoWrapper = styled.div`\n  height: 480px;\n  max-width: 480px;\n  margin: 0 auto ${({ theme }) => theme.spacing(2)}px;\n\n  @media (max-width: ${({ theme }) => theme.breakpoints.sm}px) {\n    height: 320px;\n  }\n`;\nconst PhotoImage = styled.img`\n  height: 100%;\n  width: 100%;\n  object-fit: cover;\n`;\nconst NameText = styled(Typography)`\n  padding: 0 ${({ theme }) => theme.spacing(1)}px;\n  background-color: ${({ theme }) => theme.palette.common.black};\n  color: ${({ theme }) => theme.palette.common.white};\n  word-break: break-word;\n`;\n\ntype Props = {\n  name: string;\n  age?: number;\n  genre?: string;\n  biography?: string;\n  email?: string;\n  vk?: string;\n  instagram?: string;\n};\n\nexport const ArtistTemplate: React.FC<Props> = ({\n  name,\n  age,\n  genre,\n  biography,\n  email,\n  vk,\n  instagram,\n}) => {\n  return (\n    <PageWrapper>\n      <Container>\n        <ContentWrapper>\n          <PhotoWrapper>\n            <PhotoImage\n              src=\"https://cdn1.flamp.ru/6d7599452548820411ed077c7d097c42.jpg\"\n              alt={name}\n            />\n          </PhotoWrapper>\n          <NameText variant=\"h3\" mb={2}>\n            {name}\n          </NameText>\n          {age && (\n            <Typography variant=\"body2\" mt={2} mb={1}>\n              {age} {declFormatters.age(age)}\n            </Typography>\n          )}\n          <Typography variant=\"caption\" mb={2}>\n            Жанр: {genre}\n          </Typography>\n          {biography && <Typography variant=\"body1\">{biography}</Typography>}\n          <div>\n            {email && <a href={email}>{email}</a>}\n            {instagram && <a href={instagram}>{instagram}</a>}\n            {vk && <a href={vk}>{vk}</a>}\n          </div>\n        </ContentWrapper>\n      </Container>\n    </PageWrapper>\n  );\n};\n"],"sourceRoot":""}